#!groovy

@Library("Infrastructure@master")

String product = "div"
String component = "rfe"

def yarnBuilder = new uk.gov.hmcts.contino.YarnBuilder(this)

def secrets = [
  'div-${env}': [
    secret('session-secret', 'SESSION_SECRET'),
    secret('redis-secret', 'REDIS_ENCRYPTION_SECRET'),
    secret('idam-secret', 'IDAM_SECRET'),
    secret('os-places-token', 'POST_CODE_ACCESS_TOKEN'),
    secret('launchdarkly-key', 'LAUNCHDARKLY_KEY')
  ]
]

static LinkedHashMap<String, Object> secret(String secretName, String envVar) {
  [ $class: 'AzureKeyVaultSecret',
    secretType: 'Secret',
    name: secretName,
    version: '',
    envVariable: envVar
  ]
}

withPipeline("nodejs", product, component) {
  enableAksStagingDeployment()
  disableLegacyDeployment()

  loadVaultSecrets(secrets)

  afterSuccess('test') {
    yarnBuilder.yarn('test:validation')
    // required for running functional tests on CI
  }

  before('functionalTest:aks') {
    env.NODE_ENV= 'ci'
    sh 'printenv'
  }

  before('functionalTest:preview') {
    env.NODE_ENV= 'ci'
    sh 'printenv'
  }

  before('functionalTest:aat') {
    env.NODE_ENV= 'ci'
    sh 'printenv'
  }

  afterSuccess('functionalTest:preview') {
    steps.archiveArtifacts allowEmptyArchive: true, artifacts: 'smoke-output/**/*'
    steps.archiveArtifacts allowEmptyArchive: true, artifacts: 'functional-output/**/*'
  }

  afterSuccess('functionalTest:aat') {
    steps.archiveArtifacts allowEmptyArchive: true, artifacts: 'smoke-output/**/*'
    steps.archiveArtifacts allowEmptyArchive: true, artifacts: 'functional-output/**/*'
  }
}
