# The following variables are derived as follows by the pipeline. DO NOT CHANGE:
#
#   - NAMESPACE:    product
#   - SERVICE_NAME: product-component-branch
#   - IMAGE_NAME:   registry-name/hmcts/product-component:branch
#
---
apiVersion: v1
kind: Namespace
metadata:
  name: ${NAMESPACE}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ${SERVICE_NAME}
  namespace: ${NAMESPACE}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ${SERVICE_NAME}
  template:
    metadata:
      labels:
        app: ${SERVICE_NAME}
    spec:
      dnsConfig:
        options:
        - name: single-request-reopen
      containers:
      - image: ${IMAGE_NAME}
        name: ${SERVICE_NAME}
#        envFrom:
#        - configMapRef:
#            name: ${SERVICE_NAME}-config
        env:
          - name: REDISCLOUD_URL
              valueFrom:
                secretKeyRef:
                  name: redis-secret
          key: uri
        # These may be adjusted, but be mindful please
        resources:
          requests:
            memory: "64Mi"
            cpu: "200m"
          limits:
            memory: "256Mi"
            cpu: "500m"

        # This is the port your process is listening on in the container
        ports:
        - containerPort: 3000
          name: http
        imagePullPolicy: Always
---
#
# Service
#
apiVersion: v1
kind: Service
metadata:
  name: ${SERVICE_NAME}
  namespace: ${NAMESPACE}
  labels:
    app: ${SERVICE_NAME}
spec:
  ports:
  - name: http
    protocol: TCP
    port: 80
    targetPort: 3000
  selector:
    app: ${SERVICE_NAME}
---
#
# Ingress
#
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: ${SERVICE_NAME}
  namespace: ${NAMESPACE}
  annotations:
    kubernetes.io/ingress.class: traefik
spec:
  rules:
  - host: ${SERVICE_FQDN}
    http:
      paths:
      - path: /
        backend:
          serviceName: ${SERVICE_NAME}
          servicePort: 80

#
# Redis
#
---
apiVersion: servicecatalog.k8s.io/v1beta1
kind: ServiceInstance
metadata:
  name: ${SERVICE_NAME}-redis
  namespace: ${NAMESPACE}
spec:
  clusterServiceClassExternalName: azure-rediscache
  clusterServicePlanExternalName: general-purpose
  parameters:
    location: uksouth
    cores: 2
    storage: 10
#
# Redis binding
#
---
apiVersion: servicecatalog.k8s.io/v1beta1
kind: ServiceBinding
metadata:
  name: ${SERVICE_NAME}-binding
  namespace: ${NAMESPACE}
spec:
  instanceRef:
    name: ${SERVICE_NAME}-redis
  secretName: redis-secret
